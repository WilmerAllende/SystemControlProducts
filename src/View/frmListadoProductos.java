/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

//import Classes.clsCategoria;
//import Classes.clsProducto_1;
//import DAO.daoCategoria;
//import DAO.daoProducto;
//import ModeloTablas.tablaProducto;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author FloCent
 */
public class frmListadoProductos extends javax.swing.JInternalFrame {
   //tablaProducto mtp = new tablaProducto();
    //private List listaP = new ArrayList<clsProducto_1>();
    //private List listaAux = new ArrayList<clsProducto_1>();
    public frmListadoProductos() {
        initComponents();
      //  cargarTodosLosProductos();
      //  mtp.setListaProductos(listaAux);
    //    cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbCategoria = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Productos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("NOMBRE: ");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("CATEGORIA : ");

        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Seleccionar--" }));
        cmbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriaActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 695, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(jLabel3)
                            .addGap(28, 28, 28)
                            .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jScrollPane1))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 464, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(27, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        // TODO add your handling code here:
  //      mostrarxNombre(txtNombre.getText().trim());
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped

        //  mostrarxNombre(txtNombre.getText().trim());
    }//GEN-LAST:event_txtNombreKeyTyped

    private void cmbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriaActionPerformed
        // TODO add your handling code here:
        if(cmbCategoria.getSelectedIndex()>0){
//            mostrarxCategoria(cmbCategoria.getSelectedItem().toString());
        }
    }//GEN-LAST:event_cmbCategoriaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbCategoria;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
//        private void cargarTodosLosProductos() {
//        daoProducto daop = new daoProducto();
//        try {
//             listaP=daop.listarProductos();
//        listaAux=daop.listarProductos();
//        } catch (Exception e) {
//        }
//       this.mtp.fireTableDataChanged();
//    }
//    private void mostrarxNombre(String aux){
//        listaAux.clear();
//         this.mtp.fireTableDataChanged();
//        for (int i = 0; i <listaP.size(); i++) {
//            clsProducto_1 obj=(clsProducto_1) listaP.get(i);
//            String nombre=obj.getNombre()+"";
//            if(nombre.length()>=aux.trim().length()){
//                if(aux.equals(nombre.substring(0,aux.trim().length())))
//                listaAux.add(obj);
//            }
//        }
//        this.mtp.fireTableDataChanged();
//    }
//     private void mostrarxCategoria(String aux){
//        listaAux.clear();
//         this.mtp.fireTableDataChanged();
//        for (int i = 0; i <listaP.size(); i++) {
//            clsProducto_1 obj=(clsProducto_1) listaP.get(i);
//            if(aux.equals(obj.getCategoria()))
//                listaAux.add(obj);
//            }
//        this.mtp.fireTableDataChanged();
//    }
//    private void cargarCombo(){
//        List listaCategorias ;
//        daoCategoria dao= new daoCategoria();
//        try {
//           listaCategorias= dao.listarCategorias(); 
//           for (int i = 0; i <listaCategorias.size(); i++) {
//               clsCategoria obj=(clsCategoria) listaCategorias.get(i);
//               cmbCategoria.addItem(obj.getNombre());
//                
//           }
//        } catch (Exception e) {
//        }
//        
//        
//    }
}
